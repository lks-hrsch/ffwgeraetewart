# This is a workflow to build a release when merging to master
name: build-pre-release

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  pull_request:
    branches: [master]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "create-release"
  create-release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      - name: Get branch names
        id: branch-name
        uses: tj-actions/branch-names@v7.0.7

      # https://stackoverflow.com/questions/58886293/getting-current-branch-and-commit-hash-in-github-action
      - name: Declare some variables
        id: vars
        shell: bash
        run: |
          echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
          echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

      # for some debugging
      - name: Echo out branch values
        run: |
          echo "github.base_ref: ${{ github.base_ref }}"
          echo "github.head_ref: ${{ github.head_ref }}"
          echo "github.ref: ${{ github.ref }}"
          echo "github.ref_name: ${{ github.ref_name }}"
          echo "steps.branch-name.outputs.current_branch: ${{ steps.branch-name.outputs.current_branch }}"
          echo "github.event.pull_request.title: ${{ github.event.pull_request.title }}"
          echo "Branch: ${{ steps.vars.outputs.branch }}"
          echo "Sha: ${{ steps.vars.outputs.sha_short }}"

      # create release
      - name: create release
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: false
          prerelease: true
          release_name: ${{ steps.branch-name.outputs.current_branch }}-${{ steps.vars.outputs.sha_short }}
          tag_name: ${{ steps.branch-name.outputs.current_branch }}/${{ steps.vars.outputs.sha_short }}
          body_path: README.md
        env:
          GITHUB_TOKEN: ${{ github.token }}

  # This workflow contains a single job called "build"
  build-linux-macos:
    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}
    needs: create-release
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macOS-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Setup right Python Version
      # https://github.com/actions/setup-python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version-file: ".python-version" # Read python version from a file .python-version

      - name: Install the latest version of uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "latest"

      # install python requirements
      - name: install requirements
        run: make install

      - run: python3 -c 'import tkinter'

      # build the exe
      - name: build
        run: make exe

      - name: Create tarball
        run: tar -czvf ${{ matrix.os }}.tar.gz dist/*

      # upload artifact
      - name: upload artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./${{ matrix.os }}.tar.gz
          asset_name: ffw-geraetewart-${{ matrix.os }}.tar.gz
          asset_content_type: application/gzip

  # This workflow contains a single job called "build"
  build-windows:
    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}
    needs: create-release
    strategy:
      matrix:
        os:
          - windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Setup right Python Version
      # https://github.com/actions/setup-python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version-file: ".python-version" # Read python version from a file .python-version

      - name: Install the latest version of uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "latest"

      - run: python3 -c 'import tkinter'

      # install python requirements
      - name: install requirements
        run: make install

      # build the exe
      - name: build
        run: make exe

      # https://keithweaverca.medium.com/zip-code-base-with-github-actions-for-releases-aca66f530dae
      - name: Zip Folder
        run: 7z a ${{ matrix.os }}.zip dist/*

      # upload artifact
      - name: upload artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./${{ matrix.os }}.zip
          asset_name: ffw-geraetewart-${{ matrix.os }}.zip
          asset_content_type: application/zip
